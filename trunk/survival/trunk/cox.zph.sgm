<!doctype s-function-doc system "s-function-doc.dtd" [
<!entity % S-OLD "INCLUDE">
]
>
<s-function-doc>
<s-topics>
   <s-topic>cox.zph</s-topic>
</s-topics>
<s-title>
Test the Proportional Hazards Assumption 
</s-title>
<s-description>
Test the proportional hazards assumption for a Cox regression model fit 
(<s-expression>coxph</s-expression>). 
</s-description>
<s-usage>
<s-old-style-usage>
cox.zph(fit, transform="km", global=T) 
</s-old-style-usage>
</s-usage>
<s-args-required>
<s-arg name="fit">
the result of fitting a Cox regression model, using the <s-expression>coxph</s-expression> function. 
</s-arg>
</s-args-required>
<s-args-optional>
<s-arg name="transform">
a character string specifying how the survival times should be transformed 
before the test is performed. 
Possible values are <s-expression>"km"</s-expression>, <s-expression>"rank"</s-expression>, <s-expression>"identity"</s-expression> or  a 
function of one argument. 
</s-arg>
<s-arg name="global">
should a global chi-square test be done, in addition to the 
per-variable tests. 
</s-arg>
<s-arg name="x">
if true, then the result will be a list containing the test table (a 
matrix), 
x and y.  If false then only the test table is returned. 
</s-arg>
</s-args-optional>
<s-value>
an object of class <s-expression>"cox.zph"</s-expression>, with components: 
<s-return-component name="table">
a matrix with one row for each variable, and optionally a last row for 
the global test. 
Columns of the matrix contain the correlation coefficient between transformed 
survival time and the scaled Schoenfeld residuals, a chi-square, 
and the two-sided p-value. 
For the global test there is no appropriate correlation, so an NA is 
entered into the matrix as a placeholder. 
</s-return-component>
<s-return-component name="x">
the transformed time axis. 
</s-return-component>
<s-return-component name="y">
the matrix of scaled Schoenfeld residuals.  There will be one column per 
variable and one row per event.  The row labels contain the original event 
times, which will be the same as <s-expression>x</s-expression> for the identity transform. 
</s-return-component>
<s-return-component name="call">
the calling sequence for the routine. 
<br><br>
The computations require the original <s-expression>x</s-expression> matrix of the Cox model fit. 
Thus it saves time if the <s-expression>x=T</s-expression> option is used in <s-expression>coxph</s-expression>. 
This function would usually be followed by both a plot and a print of 
the 
result. 
The plot gives an estimate of the time-dependent coefficient beta(t). 
If the proportional hazards assumption is true, beta(t) will be a 
horizontal 
line.  The printout gives a test for slope=0. 
</s-return-component>
</s-value>
<s-section name=" REFERENCES">

P. Grambsch and T. Therneau (1994), 
Proportional hazards tests and diagnostics based on weighted residuals. 
<it>Biometrika,</it>
<bf>81</bf>, 515-26. 
</s-section>
<s-see>
<s-function name="coxph.sgm">coxph</s-function>,  <s-function name="Surv.sgm">Surv</s-function>.   </s-see>
<s-examples>
<s-example type = text>
fit &lt;- coxph(Surv(futime, fustat) ~ age + ecog.ps,  
             data=ovarian, x=T) 
temp &lt;- cox.zph(fit) 
print(temp)                  # display the results 
plot(temp)                   # plot curves 
</s-example>
</s-examples>
<s-keywords>
<s-keyword>survival4</s-keyword>
</s-keywords>
<s-docclass>
function
</s-docclass>
</s-function-doc>
