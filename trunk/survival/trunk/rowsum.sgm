<!doctype s-function-doc system "s-function-doc.dtd" [
<!entity % S-OLD "INCLUDE">
]
>
<s-function-doc>
<s-topics>
   <s-topic>rowsum</s-topic>
</s-topics>
<s-title>
Row Sums of a Matrix, Based on a Grouping Variable. 
</s-title>
<s-description>
Compute sums across rows of a matrix for each level of a grouping variable. 
</s-description>
<s-usage>
<s-old-style-usage>
rowsum(x, group) 
</s-old-style-usage>
</s-usage>
<s-args-required>
<s-arg name="x">
 a matrix or vector of numeric data.  Missing values are allowed. 
</s-arg>
<s-arg name="group">
 a vector giving the grouping, with one element per row of <s-expression>x</s-expression>. 
Missing values are not allowed. 
</s-arg>
</s-args-required>
<s-value>
a matrix containing the sums.  There will be one row per unique value 
of <s-expression>group</s-expression> and the same number of columns as <s-expression>x</s-expression>. 
</s-value>
<s-see>
<s-function name="tapply.sgm">tapply</s-function>. </s-see>
<s-examples>
<s-example type = text>
x &lt;- matrix(runif(100), ncol=5) 
group &lt;- sample(1:8, 20, T) 
xsum &lt;- rowsum(x, group) 
# same result another way, slower, and temp may be much larger than x 
temp &lt;- model.matrix( ~ a - 1, data.frame(a=as.factor(group))) 
xsum2 &lt;- t(temp) %*% x 
</s-example>
</s-examples>
<s-keywords>
<s-keyword>manip</s-keyword>
<s-keyword>iteration</s-keyword>
<s-keyword>category</s-keyword>
</s-keywords>
<s-docclass>
function
</s-docclass>
</s-function-doc>
