
R version 2.11.1 (2010-05-31)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(coxme)
Loading required package: survival
Loading required package: splines
Loading required package: bdsmatrix
> options(na.action='na.exclude', contrasts=c('contr.treatment', 'contr.poly'))
> aeq <- function(x,y) all.equal(as.vector(x), as.vector(y))
> 
> #
> # Test of fitting random slopes
> #
> # Simulation data with 9 institutions, strong age effects
> #  and a random treatment effect
> #      
> set.seed(56)
> n.subject <- seq(180, by=21, length=9) # number of subjects
> slope <- sort(-.5 + rnorm(9, sd=.5))         # true treament effects
> 
> inst <- rep(1:9, n.subject)
> n <- length(inst)
> simdata <- data.frame(id=1:n, inst=inst,
+                       trt= rep(0:1, length=n),
+                       age= runif(n, 40, 70))
> #risk goes up 30%/decade of age
> simdata$hazard <- .8* exp(simdata$trt * rep(slope, n.subject) +
+                           (simdata$age-55) * .03)
> 
> rtime <- function(hazard, censor=c(1,2)) {
+     stime <- rexp(length(hazard), rate=hazard)
+     ctime <- runif(length(hazard), censor[1], censor[2])
+     list(time= pmin(stime, ctime), status=1*(stime <=ctime))
+     }
> temp <- rtime(simdata$hazard)
> simdata$time <- temp$time
> simdata$status <- temp$status
> 
> coef0 <- matrix(0., 2,9)
> for (i in 1:9) {
+     fit0 <- coxph(Surv(time, status) ~ age + trt, simdata,
+                   subset=(inst==i))
+     coef0[,i] <- fit0$coef
+     }
> 
> fit0 <- coxph(Surv(time, status) ~ age + trt, simdata)
> fit1 <- coxme(Surv(time, status) ~ age + trt + (1|inst), simdata)
> print(fit1, rcoef=TRUE, digits=5)
Cox mixed-effects model fit by maximum likelihood
  Data: simdata
  events, n = 1504, 2376
  Iterations= 8 43 
                    NULL Integrated Penalized
Log-likelihood -10892.32  -10826.57 -10822.06

                   Chisq   df p    AIC    BIC
Integrated loglik 131.50 3.00 0 125.50 109.55
 Penalized loglik 140.54 7.38 0 125.77  86.52

Model:  Surv(time, status) ~ age + trt + (1 | inst) 
Fixed and penalized coefficients
             coef exp(coef)  se(coef)     z       p
age     0.0299477   1.03040 0.0030229  9.91 0.0e+00
trt    -0.2497686   0.77898 0.0518992 -4.81 1.5e-06
inst.1 -0.1226963   0.88453 0.0784390              
inst.2 -0.0076908   0.99234 0.0755207              
inst.3 -0.0437951   0.95715 0.0742550              
inst.4 -0.1207170   0.88628 0.0731239              
inst.5  0.0321539   1.03268 0.0707905              
inst.6  0.0912491   1.09554 0.0699193              
inst.7 -0.0170631   0.98308 0.0689399              
inst.8  0.0243421   1.02464 0.0679127              
inst.9  0.1642172   1.17847 0.0666414              

Random effects
 Group Variable  Std Dev    Variance  
 inst  Intercept 0.11329001 0.01283463
> fit2 <- coxme(Surv(time, status) ~ age + trt + (1|inst/trt), simdata)
> print(fit2, rcoef=TRUE, digits=5)
Cox mixed-effects model fit by maximum likelihood
  Data: simdata
  events, n = 1504, 2376
  Iterations= 14 73 
                    NULL Integrated Penalized
Log-likelihood -10892.32  -10814.83 -10802.44

                   Chisq   df p    AIC    BIC
Integrated loglik 154.98  4.0 0 146.98 125.72
 Penalized loglik 179.77 14.2 0 151.37  75.90

Model:  Surv(time, status) ~ age + trt + (1 | inst/trt) 
Fixed and penalized coefficients
                    coef exp(coef)  se(coef)     z      p
age           0.03090186   1.03138 0.0030355 10.18 0.0000
trt          -0.30346766   0.73825 0.1086656 -2.79 0.0052
inst/trt.1/0 -0.03794080   0.96277 0.1220928             
inst/trt.1/1 -0.26243842   0.76917 0.1304507             
inst/trt.2/0  0.09397098   1.09853 0.1165404             
inst/trt.2/1 -0.12483464   0.88264 0.1249758             
inst/trt.3/0  0.11125260   1.11768 0.1149837             
inst/trt.3/1 -0.22007522   0.80246 0.1224606             
inst/trt.4/0 -0.12384299   0.88352 0.1141136             
inst/trt.4/1 -0.15503800   0.85638 0.1200827             
inst/trt.5/0  0.04362422   1.04459 0.1102365             
inst/trt.5/1  0.02740847   1.02779 0.1152658             
inst/trt.6/0  0.15457578   1.16716 0.1081136             
inst/trt.6/1  0.04206874   1.04297 0.1144580             
inst/trt.7/0 -0.03556164   0.96506 0.1085928             
inst/trt.7/1 -0.00086425   0.99914 0.1111935             
inst/trt.8/0 -0.14983867   0.86085 0.1077974             
inst/trt.8/1  0.22755307   1.25552 0.1086373             
inst/trt.9/0 -0.05623949   0.94531 0.1053288             
inst/trt.9/1  0.46622025   1.59396 0.1065641             
inst.1       -0.00138986   0.99861 0.0136439             
inst.2       -0.00014281   0.99986 0.0136417             
inst.3       -0.00050352   0.99950 0.0136410             
inst.4       -0.00129039   0.99871 0.0136404             
inst.5        0.00032867   1.00033 0.0136388             
inst.6        0.00090988   1.00091 0.0136383             
inst.7       -0.00016854   0.99983 0.0136378             
inst.8        0.00035959   1.00036 0.0136372             
inst.9        0.00189699   1.00190 0.0136365             

Random effects
 Group    Variable    Std Dev      Variance    
 inst/trt (Intercept) 0.2011420168 0.0404581109
 inst     (Intercept) 0.0136821251 0.0001872005
> 
> fit3 <- coxme(Surv(time, status) ~ age + trt + (1|inst) + (trt|inst),simdata)
> print(fit3, rcoef=TRUE, digits=5)
Cox mixed-effects model fit by maximum likelihood
  Data: simdata
  events, n = 1504, 2376
  Iterations= 24 124 
                    NULL Integrated Penalized
Log-likelihood -10892.32  -10812.96 -10803.31

                   Chisq   df p    AIC    BIC
Integrated loglik 158.72  4.0 0 150.72 129.46
 Penalized loglik 178.03 10.8 0 156.42  99.01

Model:  Surv(time, status) ~ age + trt + (1 | inst) + (trt | inst) 
Fixed and penalized coefficients
                 coef exp(coef)  se(coef)     z      p
age         0.0307259   1.03120 0.0030304 10.14 0.0000
trt        -0.3057177   0.73659 0.1069835 -2.86 0.0043
inst.1     -0.0214910   0.97874 0.0562759             
inst.2      0.0224168   1.02267 0.0557174             
inst.3      0.0240594   1.02435 0.0554974             
inst.4     -0.0436475   0.95729 0.0545119             
inst.5      0.0173391   1.01749 0.0542193             
inst.6      0.0560745   1.05768 0.0541101             
inst.7     -0.0104013   0.98965 0.0535580             
inst.8     -0.0430259   0.95789 0.0529160             
inst.9     -0.0013240   0.99868 0.0525694             
inst.1:trt -0.2959888   0.74380 0.1608653             
inst.2:trt -0.1583794   0.85353 0.1533801             
inst.3:trt -0.2695922   0.76369 0.1510714             
inst.4:trt -0.1368556   0.87210 0.1482969             
inst.5:trt  0.0234543   1.02373 0.1424319             
inst.6:trt  0.0069065   1.00693 0.1414569             
inst.7:trt  0.0154853   1.01561 0.1384999             
inst.8:trt  0.2963071   1.34488 0.1355357             
inst.9:trt  0.5186628   1.67978 0.1331088             

Random effects
 Group Variable  Std Dev     Variance   
 inst  Intercept 0.062784773 0.003941928
 inst  trt       0.278570804 0.077601693
> 
> fit4 <- coxme(Surv(time, status) ~ age + trt + (1 +trt |inst), simdata)
> 
> sfit0 <- coxph(Surv(time, status) ~ age + trt + strata(inst), simdata)
> sfit1 <- coxme(Surv(time, status) ~ age + trt + (trt|inst) + strata(inst),
+                simdata)
> print(sfit1, rcoef=TRUE, digits=5)
Cox mixed-effects model fit by maximum likelihood
  Data: simdata
  events, n = 1504, 2376
  Iterations= 9 48 
                    NULL Integrated Penalized
Log-likelihood -7636.963    -7564.2 -7557.105

                   Chisq  df p    AIC    BIC
Integrated loglik 145.53 3.0 0 139.53 123.58
 Penalized loglik 159.72 8.3 0 143.12  98.99

Model:  Surv(time, status) ~ age + trt + (trt | inst) + strata(inst) 
Fixed and penalized coefficients
                coef exp(coef)  se(coef)     z      p
age         0.030966   1.03145 0.0030472 10.16 0.0000
trt        -0.310383   0.73317 0.1165573 -2.66 0.0077
inst.1:trt -0.235730   0.78999 0.1906797             
inst.2:trt -0.235825   0.78992 0.1791461             
inst.3:trt -0.342491   0.71000 0.1763804             
inst.4:trt -0.037091   0.96359 0.1747224             
inst.5:trt -0.018576   0.98160 0.1659773             
inst.6:trt -0.091815   0.91227 0.1634652             
inst.7:trt  0.033755   1.03433 0.1623272             
inst.8:trt  0.391892   1.47978 0.1593120             
inst.9:trt  0.535881   1.70895 0.1550619             

Random effects
 Group Variable Std Dev    Variance  
 inst  trt      0.31039655 0.09634602
> 
> #Comparison plot
> y <- cbind(slope, NA, coef0[2,], fixef(sfit1)[2] + unlist(sfit1$frail),
+            fixef(fit3)[2] + fit3$frail[[2]],
+            fixef(fit4)[2] + fit4$frail[[1]][,2])
> matplot(c(1, 1.5, 2:5), t(y), type='b', xaxt='n', xlab="Simulation", 
+         ylab="Treatment coefficient", lty=1)
> axis(1, 1:5, c("Sim", "Separate", "Strata", "Uncor", "Corr"))
> 
> 
> #
> # Now compute some things exactly
> #
> contr.none <- function(n,contrasts=T) {
+         if(is.numeric(n) && length(n) == 1.)
+                 levs <- 1.:n
+         else {
+                 levs <- n
+                 n <- length(n)
+         }
+         contr <- array(0., c(n, n), list(levs, levs))
+         contr[seq(1., n^2., n + 1.)] <- 1.
+         contr
+         }
> options(contrasts=c('contr.none', 'contr.poly'))
> igchol <- function(x) {
+     dd <- diag(x)
+     ll <- as.matrix(x)
+     ll %*% diag(dd) %*% t(ll)
+     }
> 
> # For fit2
> vtemp <- unlist(ranef(fit2))
> names(vtemp) <- names(ranef(fit2))
> fit2a <- coxme(Surv(time, status) ~ age + trt + (1|inst/trt), simdata,
+                iter=0, vfixed=vtemp)
> temp <- strata(simdata$inst, simdata$trt, sep='/', shortlabel=TRUE)
> cfit <- coxph(Surv(time, status) ~ factor(temp) +factor(inst) +age + trt,
+               simdata, iter=0, x=T)
Warning message:
In coxph(Surv(time, status) ~ factor(temp) + factor(inst) + age +  :
  X matrix deemed to be singular; variable 18 19 20 21 22 23 24 25 26 27 29
> dt2 <- coxph.detail(cfit)
> u2 <- apply(dt2$score, 2, sum)
> aeq(u2, fit2a$u)
[1] TRUE
> imat2 <- apply(dt2$imat, 1:2, sum) + diag(c(rep(1/vtemp, c(18,9)),0,0))
> aeq(imat2, as.matrix(igchol(fit2a$hmat)))
[1] TRUE
> 
> # For fit3
> vtemp <- as.vector(unlist(ranef(fit3)))  #name not needed
> fit3a <- coxme(Surv(time, status) ~ age + trt + (1|inst) + (trt|inst),
+                simdata, iter=0, vfixed=as.list(vtemp))
> cfit <- coxph(Surv(time, status) ~ factor(inst) * trt + age, simdata,
+               iter=0, x=T)
Warning message:
In coxph(Surv(time, status) ~ factor(inst) * trt + age, simdata,  :
  X matrix deemed to be singular; variable 9 20
> dt3 <- coxph.detail(cfit)
> u3 <- apply(dt3$score, 2, sum)
> indx <- c(1:9, 12:20, 11, 10)
> aeq(u3[indx], fit3a$u)
[1] TRUE
> imat2 <- apply(dt3$imat, 1:2, sum)[indx,indx] + 
+     diag(c(rep(1/vtemp, c(9,9)),0,0))
> aeq(imat2, as.matrix(igchol(fit3a$hmat)))
[1] TRUE
> 
> fit3b <- coxme(Surv(time, status) ~ age + trt + (trt|inst) +(1|inst),
+                simdata, iter=0, vfixed=as.list(rev(vtemp)))
> aeq(fit3a$u, fit3b$u)
[1] TRUE
> aeq(fit3b$imat, fit3b$imat)
[1] TRUE
> 
> #For sfit1
> vtemp <- .0966
> fit <- coxme(Surv(time, status) ~ age + trt + strata(inst) + (trt|inst),
+                simdata, iter=0, vfixed=vtemp)
> cfit <- coxph(Surv(time, status) ~ factor(inst):trt + trt+ age+ strata(inst),
+               simdata, iter=0, x=T)
Warning message:
In coxph(Surv(time, status) ~ factor(inst):trt + trt + age + strata(inst),  :
  X matrix deemed to be singular; variable 11
> dt3 <- coxph.detail(cfit)
> u3 <- apply(dt3$score, 2, sum)
> indx <- c(3:11,2,1)
> aeq(u3[indx], fit$u)
[1] TRUE
> 
> imat3 <- apply(dt3$imat,1:2, sum)[indx,indx] + diag(c(rep(1/vtemp,9),0,0))
> aeq(imat3, as.matrix(igchol(fit$hmat)))
[1] TRUE
> 
> 
