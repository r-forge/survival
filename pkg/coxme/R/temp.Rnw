\section{Variance families}
\subsection{Structure}
Each distinct random effects term corresponds to a distinct
diagonal block in the overall penalty matrix, along with a
set of penalized coefficients $b$.
To make life easier for the maximizer, there may also
be a transformation between the displayed variance 
coefficients and the internal ones.

The variance family functions for [[coxme]] are similar in spirit to [[glm]]
families: the functions set up the structure but do not do any
work.  
Each of them returns a list of 3 functions, [[init]], [[generate]], and
[[wrapup]].
Any optional arguments to the variance family are used to create these
three; depending on the family they might apply to any one.

The init function is called with the $Z$ and $G$ matrices for the
given term, along with the sparse option and 
the vectors of initial and fixed values.
Since the parent routine does not know a priori the number of
variance parameters associated with a given terms, it passes in
the full vector of "unused" initial and fixed values.

The return from a call to init is
\begin{description}
\item[theta] a vector of initial values for all the parameters
that need to be optimized.  This implicitly gives the number
of parameters to optimize.
\item[X] the design matrix for any random slopes
\item[G] the design matrix for any random factors
\item[initial] the unused part of the initial values argument
\item[fixed]  the unused part of the fixed arguement
\item[parm] a list of arguments to be passed forward to the 
generate and wrapup functions.  
\end{description}

The $G$ matrix passed in and the $G$ matrix returned may not be the same.
In particular, any class levels that are going to be treated as
sparse will have been rearranged to so as to be the first columns of
the penalty matrix (variance of the random effect), and so will have
level indices of 1,2, \ldots.

The \emph{generate} function is called at each iteration with the current
vector of parameters $\theta$ and the parameter list.  It will generate
the variance matrix of the random effect. 
If there are multiple random effect terms, each of the generate
functions creates the appropriate block.

The \emph{wrapup} function is called when iteration is complete.  It's
primary job is to return the extended and re-transformed $\theta$
vector.  Fixed coefficients are re-inserted.

\section{coxvarDefault}
This is the default routine, which assumes a simple nestd structure
for the variance.
<<coxvarDefault1>>=
coxvarDefault <- function(Z, G, init, fixed, sparse) {
    asdfadsf
   }
@
